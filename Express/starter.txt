////////////////Express/Mongo starter///////////////////////
Create a project folder
Navigate inside that folder in your terminal and type 
npm init -y
npm install express ejs mongoose express-session axios express-flash mongodb moment body-parser

////all installs can be put into a single line
npm install ejs
npm install express-session	//////for session
npm install axios  		//////for AJAX/CORS
npm install express-flash  	//////used for error display
npm install mongoose
npm install mongodb
npm install moment
npm install body-parser

MONGO START
C:\Program Files\MongoDB\Server\4.2\bin
bash - ./mongod to start server
new bash - ./mongo to connect to DB server
nodemon server.js


//////////////////////////ANGULAR///////////////////////////
	////Within express root folder////
ng new app_name
ng build --watch  ////// can use: ng serve --port 8000 /////add port if needed
ng g s http      ///create a service called http
				/////////////////////////////////////////////////////////////////////////////////npm install bootstrap jquery popper    ///////install bootstrap dependencies


////////put this link in the app.component.html to use bootstrap across the project
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">

array.reduce()
array.map()

/////////////////in angular.json add: for bootstrap use
 "styles": [
	"src/styles.css",
	"node_modules/bootstrap/dist/css/bootstrap.min.css"
  ],
////////////////////////////////////////////////////////////
///////////////app.module.ts
@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    HttpClientModule,
    FormsModule,
  ],
  providers: [HttpService], /////add service here
  bootstrap: [AppComponent]
})
export class AppModule { }



  <!-- <ng-container *ngIf="tshow">
    <div *ngFor="let cake of currcake">
      <h4>{{cake.baker}}</h4>
      <h5>{{cake.imageURL}}</h5>
    </div>
  </ng-container>
  <ng-container *ngIf="show">
      <div style="margin: 0 auto;text-align: left;">
          <div class="row">
              <label class="col">baker:</label>
              <div class="col"><input name="yourname" placeholder="{{edcake.baker}}" [(ngModel)]="edcake.baker"/></div>
          </div>
          <div class="row">
            <label class="col">imageURL:</label>
            <div class="col"><input name="email" placeholder="{{edcake.imageURL}}" [(ngModel)]="edcake.imageURL"/></div>
          </div>
          <button (click)="edit(cake)" class="btn btn-primary m-2">Edit cake</button>
      </div>
  </ng-container> -->




